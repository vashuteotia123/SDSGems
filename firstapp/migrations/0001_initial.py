# Generated by Django 3.0.5 on 2021-12-01 13:21

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile/')),
                ('title', models.CharField(max_length=30)),
                ('subject', tinymce.models.HTMLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='centerstone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stone', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Jewellery - Center Stone',
            },
        ),
        migrations.CreateModel(
            name='certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cert', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Jewellery - Certificates Types',
            },
        ),
        migrations.CreateModel(
            name='certificate_d',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certd', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='clarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clarity', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='color_of_colorstone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'ColourStone - Color',
            },
        ),
        migrations.CreateModel(
            name='color_origin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_o', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Diamonds - Color Origin',
            },
        ),
        migrations.CreateModel(
            name='colorofcstone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Jewellery - Colour of Center Stone',
            },
        ),
        migrations.CreateModel(
            name='companyinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('company_name', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('mobile_no', models.CharField(max_length=20)),
                ('tel_no', models.CharField(max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.EmailField(blank=True, max_length=150, null=True)),
                ('pan_no', models.CharField(blank=True, max_length=20, null=True)),
                ('GST_no', models.CharField(blank=True, max_length=20, null=True)),
                ('line_id', models.CharField(blank=True, max_length=20, null=True)),
                ('wechat_id', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'verbose_name_plural': 'Company Details',
            },
        ),
        migrations.CreateModel(
            name='countries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='currencies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='cut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cut', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='fancy_color_intensity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_c_i', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='fancycolor_grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_c_grade', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='fluorescence_color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_color', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='fluorescence_intensity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_intensity', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='gemtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gem', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'ColourStone - Gem',
            },
        ),
        migrations.CreateModel(
            name='Inventoryofjewellery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stockid', models.CharField(blank=True, max_length=30)),
                ('center_stone_weight', models.DecimalField(decimal_places=2, max_digits=9)),
                ('center_stone_pieces', models.BigIntegerField()),
                ('grosswt', models.DecimalField(decimal_places=2, max_digits=9)),
                ('pcs', models.IntegerField()),
                ('tag_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('purchaseapv', models.BooleanField(blank=True)),
                ('cartstatus', models.BooleanField(default=False)),
                ('appvreturnstatus', models.BooleanField(default=False)),
                ('frontend', models.BooleanField(default=False)),
                ('center_stone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.centerstone')),
                ('cert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.certificate')),
                ('color_of_center_stone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.colorofcstone')),
            ],
        ),
        migrations.CreateModel(
            name='jewell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jewel', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Jewellery -Type',
            },
        ),
        migrations.CreateModel(
            name='Lab_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name_plural': 'ColourStone - Labs',
            },
        ),
        migrations.CreateModel(
            name='location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='metal1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metal', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Jewellery - Metal',
            },
        ),
        migrations.CreateModel(
            name='Origin_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'ColourStone - Origin',
            },
        ),
        migrations.CreateModel(
            name='polish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polish', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Salesreturn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('stockid', models.CharField(max_length=30)),
                ('company_name', models.CharField(max_length=30)),
                ('location', models.CharField(max_length=30)),
                ('jewellery_type', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Salesreturn_d',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('stockid', models.CharField(max_length=30)),
                ('company_name', models.CharField(max_length=30)),
                ('location', models.CharField(max_length=30)),
                ('shape', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='shape1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Jewellery - Shape',
            },
        ),
        migrations.CreateModel(
            name='shape_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'ColourStone - Shape',
            },
        ),
        migrations.CreateModel(
            name='shape_d',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=30)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.countries')),
            ],
        ),
        migrations.CreateModel(
            name='symmetry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symmetry', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Treatment_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'ColourStone - Treatment',
            },
        ),
        migrations.CreateModel(
            name='white_color_grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('w_c_g', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='User_table',
            fields=[
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email_id', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('fax', models.CharField(blank=True, max_length=100, null=True)),
                ('Businesstype', models.CharField(choices=[('Customer', 'Customer'), ('Wholesaler', 'Wholesaler'), ('Broker', 'Broker')], default='Customer', max_length=30)),
                ('address1', models.CharField(max_length=30)),
                ('address2', models.CharField(blank=True, max_length=30, null=True)),
                ('city', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=100)),
                ('permit_user', models.BooleanField(default=False)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.countries')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.State')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Salesreturn_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('stockid', models.CharField(max_length=30)),
                ('company_name', models.CharField(max_length=30)),
                ('weight', models.FloatField(null=True)),
                ('tag_price_cs', models.FloatField(null=True)),
                ('gem_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.gemtype')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
            ],
        ),
        migrations.CreateModel(
            name='Salesofjewellery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date of transaction')),
                ('stockid', models.CharField(max_length=30)),
                ('center_stone_weight', models.DecimalField(decimal_places=2, max_digits=9)),
                ('center_stone_pieces', models.BigIntegerField()),
                ('gross_wt', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('PCS', models.BigIntegerField(verbose_name='Pieces')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('DIS', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('DIS_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('total_value', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('tag_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('rate', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('salesapprovalstatus', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, max_length=3000, null=True)),
                ('center_stone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.centerstone')),
                ('certificate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.certificate')),
                ('color_of_center_stone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.colorofcstone')),
                ('company_name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.companyinfo')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.currencies', verbose_name='Currency')),
                ('jewellery_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.jewell')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
                ('metal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.metal1')),
                ('shape', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape1')),
            ],
            options={
                'verbose_name_plural': 'Jewellery - Sales',
            },
        ),
        migrations.CreateModel(
            name='Salesofdiamond',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date of transaction')),
                ('stockid', models.CharField(max_length=30)),
                ('fancycolor_grade', models.CharField(max_length=30)),
                ('measurements', models.CharField(blank=True, max_length=30, null=True)),
                ('depth', models.DecimalField(decimal_places=2, max_digits=9)),
                ('table', models.DecimalField(decimal_places=2, max_digits=9)),
                ('certificate_no_d', models.CharField(max_length=30)),
                ('laser_inscription', models.BooleanField(default=False)),
                ('PCS_d', models.IntegerField(blank=True, null=True)),
                ('weight_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('units', models.DecimalField(decimal_places=2, max_digits=9)),
                ('amount_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('DIS_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('DIS_Amount_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('total_value_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('tag_price_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('rate_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('salesapprovalstatus_d', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, max_length=3000, null=True)),
                ('certificate_d', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.certificate_d')),
                ('clarity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.clarity')),
                ('color_origin1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.color_origin')),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.companyinfo')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.currencies')),
                ('cut', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.cut')),
                ('fluorescence_color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.fluorescence_color')),
                ('fluorescence_intensity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.fluorescence_intensity')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
                ('polish', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.polish')),
                ('shape', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape_d')),
                ('symmetry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.symmetry')),
                ('white_color_grade1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.white_color_grade')),
            ],
        ),
        migrations.CreateModel(
            name='Salesofcolorstones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date of transaction')),
                ('stockid', models.CharField(max_length=30)),
                ('Clarity', models.CharField(blank=True, max_length=30, null=True, verbose_name='Clarity')),
                ('certificate_no', models.CharField(max_length=30, verbose_name='Certificate No.')),
                ('measurements', models.CharField(blank=True, max_length=30, null=True, verbose_name='Measurement')),
                ('PCS', models.IntegerField(verbose_name='Pieces')),
                ('Weight_cs', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Weight')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('units_cs', models.CharField(default='', max_length=30)),
                ('amount_cs', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Amount')),
                ('DIS_cs', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Discount Percentage')),
                ('DIS_amount_cs', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Discount Amount')),
                ('total_value_cs', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Total Value')),
                ('tag_price_cs', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Tag Price')),
                ('rate_cs', models.DecimalField(decimal_places=2, default=1, max_digits=9, verbose_name='Rate')),
                ('salesapprovalstatus_cs', models.BooleanField(default=False, verbose_name='Sold')),
                ('comment', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Comment')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.color_of_colorstone')),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.companyinfo')),
                ('currency_cs', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.currencies', verbose_name='Currency')),
                ('gem_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.gemtype')),
                ('lab', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Lab_cs')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
                ('origin', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Origin_cs')),
                ('shape', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape_cs')),
                ('treatment', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Treatment_cs')),
            ],
            options={
                'verbose_name_plural': 'ColourStone - Sales',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOfColorStones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('Clarity', models.CharField(blank=True, max_length=30, null=True)),
                ('certificate_no', models.CharField(blank=True, max_length=30, null=True, verbose_name='Certificate Number')),
                ('measurements', models.CharField(blank=True, max_length=30, null=True)),
                ('PCS', models.IntegerField()),
                ('Weight', models.FloatField(null=True)),
                ('Price', models.FloatField()),
                ('units', models.CharField(blank=True, max_length=30, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=9)),
                ('discount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('total_val', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('purchaseapv', models.BooleanField(default=False)),
                ('tag_price', models.FloatField()),
                ('rate', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, default='', max_length=3000, null=True)),
                ('Treatment', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Treatment_cs')),
                ('colour', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.color_of_colorstone')),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.companyinfo')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.currencies')),
                ('gem_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.gemtype')),
                ('lab', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Lab_cs')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
                ('origin', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Origin_cs')),
                ('shape', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape_cs')),
            ],
        ),
        migrations.CreateModel(
            name='POJ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('center_stone_weight', models.DecimalField(decimal_places=2, max_digits=9)),
                ('center_stone_pieces', models.BigIntegerField()),
                ('grosswt', models.DecimalField(decimal_places=2, max_digits=9)),
                ('pcs', models.BigIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=9)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('purchase_approval', models.BooleanField(default=False)),
                ('tag_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('rate', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('comment', models.TextField(blank=True, max_length=3000, null=True)),
                ('center_stone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.centerstone')),
                ('cert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.certificate')),
                ('color_of_center_stone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.colorofcstone')),
                ('company_name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.companyinfo')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.currencies')),
                ('jewellery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.jewell')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
                ('metal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.metal1')),
                ('shape', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape1')),
            ],
        ),
        migrations.CreateModel(
            name='POD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('fancycolor_grade', models.CharField(blank=True, max_length=100, null=True)),
                ('measurements', models.CharField(blank=True, max_length=30, null=True)),
                ('depth', models.DecimalField(decimal_places=2, max_digits=9)),
                ('table_perc', models.DecimalField(decimal_places=2, max_digits=9)),
                ('certificate_no_d', models.CharField(max_length=30)),
                ('laser_inscription', models.BooleanField()),
                ('PCS_d', models.IntegerField()),
                ('weight_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('units', models.CharField(blank=True, max_length=30, null=True)),
                ('amount_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('DIS_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('DIS_Amount_d', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('total_val_d', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('purchaseapv_d', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, max_length=3000, null=True)),
                ('tag_price_d', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('rate_d', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('certificate_d', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.certificate_d')),
                ('clarity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.clarity')),
                ('color_origin1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.color_origin')),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.companyinfo')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.currencies')),
                ('cut', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.cut')),
                ('fluorescence_color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.fluorescence_color')),
                ('fluorescence_intensity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.fluorescence_intensity')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
                ('polish', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.polish')),
                ('shape', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape_d')),
                ('symmetry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.symmetry')),
                ('white_color_grade1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.white_color_grade')),
            ],
        ),
        migrations.CreateModel(
            name='Jewel_media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='JewelleryMedia/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='JewelleryMedia/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='JewelleryMedia/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='JewelleryMedia/')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='JewelleryMedia/')),
                ('image6', models.ImageField(blank=True, null=True, upload_to='JewelleryMedia/')),
                ('image7', models.ImageField(blank=True, null=True, upload_to='JewelleryMedia/')),
                ('image8', models.ImageField(blank=True, null=True, upload_to='JewelleryMedia/')),
                ('image9', models.ImageField(blank=True, null=True, upload_to='JewelleryMedia/')),
                ('image10', models.ImageField(blank=True, null=True, upload_to='JewelleryMedia/')),
                ('video_embed_link', models.TextField(blank=True, null=True)),
                ('certificate', models.FileField(blank=True, null=True, upload_to='Certificates/Jewellery/')),
                ('description', models.TextField(blank=True, max_length=5000, null=True, verbose_name='Description')),
                ('jewellery_info', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Jewellery Information')),
                ('jewel_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.Inventoryofjewellery')),
            ],
            options={
                'verbose_name_plural': 'Jewellery - Media',
            },
        ),
        migrations.AddField(
            model_name='inventoryofjewellery',
            name='jewellery_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.jewell'),
        ),
        migrations.AddField(
            model_name='inventoryofjewellery',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location'),
        ),
        migrations.AddField(
            model_name='inventoryofjewellery',
            name='metal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.metal1'),
        ),
        migrations.AddField(
            model_name='inventoryofjewellery',
            name='shape',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape1'),
        ),
        migrations.CreateModel(
            name='Inventoryofdiamond',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stockid', models.CharField(max_length=30)),
                ('fancycolor_grade', models.CharField(blank=True, max_length=100, null=True)),
                ('measurements', models.CharField(blank=True, max_length=30, null=True)),
                ('depth', models.DecimalField(decimal_places=2, max_digits=9)),
                ('table', models.DecimalField(decimal_places=2, max_digits=9)),
                ('certificate_no_d', models.CharField(max_length=30)),
                ('laser_inscription', models.BooleanField()),
                ('PCS_d', models.IntegerField(blank=True, null=True)),
                ('weight_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('units', models.CharField(blank=True, max_length=30, null=True)),
                ('tag_price_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('purchaseapv_d', models.BooleanField(blank=True)),
                ('cartstatus', models.BooleanField(default=False)),
                ('appvreturnstatus_d', models.BooleanField(default=False)),
                ('certificate_d', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.certificate_d')),
                ('clarity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.clarity')),
                ('color_origin1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.color_origin')),
                ('cut', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.cut')),
                ('fluorescence_color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.fluorescence_color')),
                ('fluorescence_intensity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.fluorescence_intensity')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
                ('polish', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.polish')),
                ('shape', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape_d')),
                ('symmetry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.symmetry')),
                ('white_color_grade1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.white_color_grade')),
            ],
        ),
        migrations.CreateModel(
            name='Inventoryofcolorstones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stockid', models.CharField(max_length=30)),
                ('Clarity', models.CharField(blank=True, max_length=30, null=True)),
                ('certificate_no', models.CharField(max_length=30)),
                ('measurements', models.CharField(blank=True, max_length=30, null=True)),
                ('PCS', models.IntegerField(null=True)),
                ('Weight', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Weight')),
                ('tag_price', models.FloatField(null=True)),
                ('status', models.BooleanField(default=False)),
                ('purchaseapv', models.BooleanField(blank=True)),
                ('appvreturnstatus', models.BooleanField(default=False)),
                ('cartstatus', models.BooleanField(default=False)),
                ('frontend', models.BooleanField(default=False)),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.color_of_colorstone')),
                ('gem_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.gemtype')),
                ('lab', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Lab_cs')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
                ('origin', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Origin_cs')),
                ('shape', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape_cs')),
                ('treatment', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Treatment_cs')),
            ],
        ),
        migrations.AddField(
            model_name='companyinfo',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.countries'),
        ),
        migrations.CreateModel(
            name='ColorStone_media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='ColorStoneMedia/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='ColorStoneMedia/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='ColorStoneMedia/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='ColorStoneMedia/')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='ColorStoneMedia/')),
                ('image6', models.ImageField(blank=True, null=True, upload_to='ColorStoneMedia/')),
                ('image7', models.ImageField(blank=True, null=True, upload_to='ColorStoneMedia/')),
                ('image8', models.ImageField(blank=True, null=True, upload_to='ColorStoneMedia/')),
                ('image9', models.ImageField(blank=True, null=True, upload_to='ColorStoneMedia/')),
                ('image10', models.ImageField(blank=True, null=True, upload_to='ColorStoneMedia/')),
                ('video_embed_link', models.TextField(blank=True, null=True)),
                ('certificate', models.FileField(blank=True, null=True, upload_to='Certificates/ColorStone/')),
                ('description', models.TextField(blank=True, max_length=5000, null=True, verbose_name='Description')),
                ('colorstone_info', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Colour Stone Information')),
                ('stockid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.Inventoryofcolorstones')),
            ],
            options={
                'verbose_name_plural': 'ColourStone - Media',
            },
        ),
        migrations.CreateModel(
            name='cloneInvofjewellery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('stockid', models.CharField(max_length=30)),
                ('center_stone_weight', models.DecimalField(decimal_places=2, max_digits=9)),
                ('center_stone_pieces', models.BigIntegerField()),
                ('gross_wt', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('PCS', models.IntegerField()),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('DIS', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('DIS_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('total_value', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('tag_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('rate', models.DecimalField(blank=True, decimal_places=2, default=1, max_digits=9)),
                ('salesapprovalstatus', models.BooleanField(default=False)),
                ('center_stone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.centerstone')),
                ('certificate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.certificate')),
                ('color_of_center_stone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.colorofcstone')),
                ('company_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.companyinfo', verbose_name='Company')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.currencies')),
                ('jewellery_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.jewell')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
                ('metal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.metal1')),
                ('shape', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape1')),
            ],
        ),
        migrations.CreateModel(
            name='cloneInvofdiamond',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('stockid', models.CharField(max_length=30)),
                ('fancycolor_grade', models.CharField(max_length=30)),
                ('measurements', models.CharField(blank=True, max_length=30, null=True)),
                ('depth', models.DecimalField(decimal_places=2, max_digits=9)),
                ('table', models.DecimalField(decimal_places=2, max_digits=9)),
                ('certificate_no_d', models.CharField(max_length=30)),
                ('laser_inscription', models.CharField(max_length=30)),
                ('PCS_d', models.IntegerField(blank=True, null=True)),
                ('weight_d', models.DecimalField(decimal_places=2, max_digits=9)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Price')),
                ('units', models.CharField(blank=True, max_length=30, null=True)),
                ('amount_d', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Amount')),
                ('DIS_d', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Discount')),
                ('DIS_Amount_d', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Discount Amount')),
                ('total_value_d', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Total Value')),
                ('tag_price_d', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Tag Price')),
                ('rate_d', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Rate')),
                ('salesapprovalstatus_d', models.BooleanField(default=False)),
                ('certificate_d', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.certificate_d')),
                ('clarity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.clarity')),
                ('color_origin1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.color_origin')),
                ('company_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.companyinfo')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.currencies')),
                ('cut', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.cut')),
                ('fluorescence_color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.fluorescence_color')),
                ('fluorescence_intensity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.fluorescence_intensity')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
                ('polish', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.polish')),
                ('shape', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape_d')),
                ('symmetry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.symmetry')),
                ('white_color_grade1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.white_color_grade')),
            ],
        ),
        migrations.CreateModel(
            name='cloneInvofcolorstones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('stockid', models.CharField(max_length=30)),
                ('Clarity', models.CharField(blank=True, max_length=30, null=True)),
                ('certificate_no', models.CharField(max_length=30)),
                ('measurements', models.CharField(blank=True, max_length=30, null=True)),
                ('PCS', models.IntegerField(null=True, verbose_name='Pieces')),
                ('Weight_cs', models.FloatField(null=True, verbose_name='Weight')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('units_cs', models.CharField(blank=True, max_length=30, null=True, verbose_name='Units')),
                ('amount_cs', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Amount Per CTS')),
                ('DIS_cs', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Discount %')),
                ('DIS_amount_cs', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Discounted Amount')),
                ('total_value_cs', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Total Value')),
                ('tag_price_cs', models.DecimalField(decimal_places=2, max_digits=9, null=True, verbose_name='Tag Price')),
                ('rate_cs', models.DecimalField(blank=True, decimal_places=2, default=1, max_digits=9, null=True, verbose_name='Rate')),
                ('salesapprovalstatus_cs', models.BooleanField(default=False)),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='firstapp.color_of_colorstone')),
                ('company_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.companyinfo', verbose_name='Company')),
                ('currency_cs', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.currencies', verbose_name='Currency')),
                ('gem_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.gemtype')),
                ('lab', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Lab_cs')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.location')),
                ('origin', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Origin_cs')),
                ('shape', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.shape_cs')),
                ('treatment', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='firstapp.Treatment_cs')),
            ],
        ),
    ]
